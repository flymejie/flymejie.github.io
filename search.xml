<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[有关日历的Table表格]]></title>
    <url>%2F2019%2F05%2F29%2Ftable%2F</url>
    <content type="text"><![CDATA[因项目需求要做一个带月份和日期的表格，故此自己总结了一下 先看一下效果图： 废话不多说先看代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt; &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt; &lt;title&gt;日期表格&lt;/title&gt; &lt;link rel="stylesheet" href="css/date.css"&gt;&lt;/head&gt;&lt;body&gt;&lt;section class="date-section"&gt; &lt;div class="date-container"&gt; &lt;div class="item-container"&gt; &lt;div class="left-container"&gt; &lt;span class="left-row-button"&gt; &lt;i style="transform: rotateZ(0deg)"&gt;&lt;/i&gt; &lt;/span&gt; &lt;table class="left-table"&gt; &lt;tr class="left-tr-title"&gt; &lt;th&gt;阶段&lt;/th&gt; &lt;th&gt;内容&lt;/th&gt; &lt;th&gt;执行责任人&lt;/th&gt; &lt;th&gt;组员&lt;/th&gt; &lt;th&gt;客户要求时间&lt;/th&gt; &lt;th&gt;开始时间&lt;/th&gt; &lt;th&gt;计划完成时间&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan="3" class="tr-rows"&gt;UI阶段&lt;/td&gt; &lt;td&gt;0001&lt;/td&gt; &lt;td&gt;0002&lt;/td&gt; &lt;td&gt;0003&lt;/td&gt; &lt;td&gt;0004&lt;/td&gt; &lt;td&gt;0005&lt;/td&gt; &lt;td&gt;0006&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;0001&lt;/td&gt; &lt;td&gt;0002&lt;/td&gt; &lt;td&gt;0003&lt;/td&gt; &lt;td&gt;0004&lt;/td&gt; &lt;td&gt;0005&lt;/td&gt; &lt;td&gt;0006&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;0001&lt;/td&gt; &lt;td&gt;0002&lt;/td&gt; &lt;td&gt;0003&lt;/td&gt; &lt;td&gt;0004&lt;/td&gt; &lt;td&gt;0005&lt;/td&gt; &lt;td&gt;0006&lt;/td&gt; &lt;/tr&gt; &lt;tr class="tr-line"&gt;&lt;/tr&gt; &lt;tr&gt; &lt;td rowspan="3" class="tr-rows"&gt;UI阶段&lt;/td&gt; &lt;td&gt;0001&lt;/td&gt; &lt;td&gt;0002&lt;/td&gt; &lt;td&gt;0003&lt;/td&gt; &lt;td&gt;0004&lt;/td&gt; &lt;td&gt;0005&lt;/td&gt; &lt;td&gt;0006&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;0001&lt;/td&gt; &lt;td&gt;0002&lt;/td&gt; &lt;td&gt;0003&lt;/td&gt; &lt;td&gt;0004&lt;/td&gt; &lt;td&gt;0005&lt;/td&gt; &lt;td&gt;0006&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;0001&lt;/td&gt; &lt;td&gt;0002&lt;/td&gt; &lt;td&gt;0003&lt;/td&gt; &lt;td&gt;0004&lt;/td&gt; &lt;td&gt;0005&lt;/td&gt; &lt;td&gt;0006&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="right-container"&gt; &lt;ul class="month-change-btn"&gt; &lt;li data-id="left"&gt;&lt;/li&gt; &lt;li data-id="right"&gt;&lt;/li&gt; &lt;/ul&gt; &lt;table class="right-table"&gt; &lt;tr class="tr-month"&gt;&lt;/tr&gt; &lt;tr class="tr-week"&gt;&lt;/tr&gt; &lt;tr class="tr-day"&gt;&lt;/tr&gt; &lt;tr class="right-tr-list"&gt; &lt;td&gt;01&lt;/td&gt; &lt;td&gt;02&lt;/td&gt; &lt;td&gt;03&lt;/td&gt; &lt;td&gt;04&lt;/td&gt; &lt;td&gt;05&lt;/td&gt; &lt;td&gt;06&lt;/td&gt; &lt;td&gt;07&lt;/td&gt; &lt;td&gt;08&lt;/td&gt; &lt;td&gt;09&lt;/td&gt; &lt;td&gt;10&lt;/td&gt; &lt;td&gt;11&lt;/td&gt; &lt;td&gt;12&lt;/td&gt; &lt;td&gt;13&lt;/td&gt; &lt;td&gt;14&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;td&gt;16&lt;/td&gt; &lt;td&gt;17&lt;/td&gt; &lt;td&gt;18&lt;/td&gt; &lt;td&gt;19&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;td&gt;21&lt;/td&gt; &lt;td&gt;22&lt;/td&gt; &lt;td&gt;23&lt;/td&gt; &lt;td&gt;24&lt;/td&gt; &lt;td&gt;25&lt;/td&gt; &lt;td&gt;26&lt;/td&gt; &lt;td&gt;27&lt;/td&gt; &lt;td&gt;28&lt;/td&gt; &lt;td&gt;29&lt;/td&gt; &lt;td&gt;30&lt;/td&gt; &lt;td&gt;31&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/section&gt;&lt;/body&gt;&lt;script src="js/date.js"&gt;&lt;/script&gt;&lt;/html&gt; 样式如下body, html &#123; padding: 0; margin: 0; width: 100%; height: 100%;&#125;ul, li, ol &#123; list-style: none; padding: 0; margin: 0; border: 0;&#125;table, tr, td, th &#123; padding: 0; margin: 0; list-style: none; text-align: center;&#125;table &#123; border-collapse: collapse; border-spacing: 0;&#125;table td &#123; height: 28px;&#125;.date-section &#123; width: 100%; height: 100%; position: relative; top: 0; left: 0; overflow: hidden;&#125;.date-container &#123; width: 100%; height: 100%;&#125;.item-container &#123; width: 100%; height: 100%; display: flex; justify-content: left; flex-wrap: nowrap; padding: 10px; box-sizing: border-box;&#125;/* left-container */.left-container &#123; width: 40%; position: relative;&#125;.left-container .left-row-button &#123; display: block; position: absolute; top: 0; right: -4px; width: 10px; height: 62px; background-color: #cdcdce;&#125;.left-container .left-row-button &gt; i &#123; display: block; width: 6px; height: 6px; box-sizing: border-box; border: 6px solid; border-color: transparent #000 transparent transparent; position: absolute; top: 0; bottom: 0; right: 2px; margin: auto 0;&#125;.left-table &#123; width: 100%;&#125;.left-tr-title &#123; height: 62px;&#125;.left-table td &#123; padding: 0; border: 1px solid; border-color: #919191 transparent #919191;&#125;.left-table .tr-rows &#123; border-right: 1px solid #919191;&#125;.left-table .tr-line, .right-table .tr-line &#123; width: 100%; height: 10px; background-color: aqua;&#125;/* right-container */.right-container &#123; flex: 1; position: relative;&#125;.month-change-btn &#123; width: 100%; height: 24px; position: absolute; display: flex; justify-content: space-between; flex-wrap: nowrap;&#125;.month-change-btn &gt; li &#123; width: 22px; height: 22px; visibility: hidden;&#125;.month-change-btn:hover li&#123; visibility: visible;&#125;.month-change-btn &gt; li::before &#123; content: ""; display: block; width: 14px; height: 2px; background-color: #919191; border-radius: 4px;&#125;.month-change-btn &gt; li::after &#123; content: ""; display: block; height: 14px; width: 2px; background-color: #919191; border-radius: 4px;&#125;.month-change-btn &gt; li:nth-child(1)::before &#123; transform: rotateZ(-30deg) translate(0px, 8px);&#125;.month-change-btn &gt; li:nth-child(1)::after &#123; transform: rotateZ(-60deg) translate(0px, 11px);&#125;.month-change-btn &gt; li:nth-child(2)::before &#123; transform: rotateZ(30deg) translate(7px, 4px);&#125;.month-change-btn &gt; li:nth-child(2)::after &#123; transform: rotateZ(60deg) translate(10px, -6px);&#125;.right-table &#123; width: 100%;&#125;.tr-month &gt; th &#123; border: 1px solid #919191; font-size: 16px;&#125;.tr-week &gt; th &#123; border: 1px solid #919191; font-size: 14px;&#125;.tr-day &gt; th &#123; border: 1px solid #919191; font-size: 14px; position: relative;&#125;.tr-day-span &#123; width: 56px; line-height: 26px; border-radius: 6px; background-color: rgb(139, 162, 255); color: #fff; position: absolute; left: -50%; top: -38px; visibility: hidden;&#125;.tr-day-span::before &#123; content: ""; display: block; box-sizing: border-box; width: 8px; border-width: 20px 6px; border-style: solid; border-color: #4e82ff transparent transparent; position: absolute; bottom: -38px; left: 0; right: 0; margin: 0 auto;&#125;.tr-day &gt; th:hover .tr-day-span &#123; transition: visibility 1s; visibility: visible;&#125;.right-tr-list &gt; td &#123; border: 1px solid #919191;&#125; 最后献上JS代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131window.onload = function () &#123; let leftRowBtn = document.querySelector('.left-row-button'); leftRowBtn.addEventListener('click', function () &#123; this.firstElementChild.style.transform == 'rotateZ(0deg)' ? this.firstElementChild.style.transform = 'rotateZ(180deg) translateX(-6px)' : this.firstElementChild.style.transform = 'rotateZ(0deg)'; &#125;); /* 切换月份 */ document.querySelector('.month-change-btn').addEventListener('click', function (e) &#123; console.log(e.target.getAttribute('data-id')); changeMonthTable(e.target.getAttribute('data-id')); &#125;); var m = getMonth(), y = getYear(); function changeMonthTable(direction) &#123; if (direction == 'left') &#123; m -= 1; if (m &lt; 1) &#123; m = 12; y -= 1; &#125; addCalendarTable(y, m); &#125; else if (direction == 'right') &#123; m += 1; if (m &gt; 12) &#123; y += 1; m = 1; &#125; addCalendarTable(y, m); &#125; &#125; /* 动态添加日历表格 */ addCalendarTable(); function addCalendarTable(year, month) &#123; var year = year || getYear(); var month = month || getMonth(); let dayShow = '', weekShow = ''; //////////////// month ///////////////////// let monthShow = `&lt;th colspan="$&#123;getMonthDays(year, month)&#125;"&gt;$&#123;month&#125;月&lt;/th&gt;`; document.querySelector('.tr-month').innerHTML = monthShow; ////////////////week////////////////// for (let w = 0; w &lt; getWeekMonth(year, month).length; w++) &#123; weekShow += ` &lt;th colspan="$&#123;getWeekMonth(year, month)[w]&#125;"&gt;第$&#123;changeWeekNum(w)&#125;周&lt;/th&gt;` &#125; document.querySelector('.tr-week').innerHTML = weekShow; ///////////// day //////////////// for (let i = 1; i &lt;= getMonthDays(year, month); i++) &#123; dayShow += ` &lt;th&gt;$&#123;i&#125; &lt;span class="tr-day-span"&gt;星期$&#123;changeNum(getWeekday(year, month, i))&#125;&lt;/span&gt;&lt;/th&gt;`; &#125; document.querySelector('.tr-day').innerHTML = dayShow; return getMonthDays(year, month); &#125; changeNum(getWeekday(getYear(), getMonth(), 5)); /* 转换星期的汉字 */ function changeNum(num) &#123; let weekArr = ['日', '一', '二', '三', '四', '五', '六']; return weekArr[num]; &#125; function changeWeekNum(num) &#123; let weekArr = ['一', '二', '三', '四', '五', '六']; return weekArr[num]; &#125; /*获取月份的天数 */ function getMonthDays(year, month) &#123; console.log(new Date(year, month, 0).getDate()); return new Date(year, month, 0).getDate(); &#125; /* 获取星期几*/ function getWeekday(year, month, day) &#123; // console.log(new Date(year, month - 1, day)); return new Date(year, month - 1, day).getDay(); &#125; /* 获取当前年份*/ function getYear() &#123; console.log(new Date().getFullYear()); return new Date().getFullYear(); &#125; /* 获取当前月份 */ function getMonth() &#123; console.log(new Date().getMonth() + 1); return new Date().getMonth() + 1; &#125; /* 获取当前星期*/ function getWeek() &#123; console.log(new Date().getDay()); return new Date().getDay(); &#125; /* 获取当前日期 */ function getDays() &#123; console.log(new Date().getDate()); return new Date().getDate(); &#125; /* 获取当月一共几个星期 */ function getWeekMonth(year, month) &#123; let days = new Date(year, month, 0).getDate(); let firstWeek = new Date(year, month - 1, 1).getDay(); let firstWeekDays = 7 - firstWeek + 1; let numArr = []; if ((days - firstWeekDays) % 7 == 0) &#123; let num = (days - firstWeekDays) / 7; numArr.push(firstWeekDays); for (let i = 0; i &lt; num; i++) &#123; numArr.push(7); &#125; &#125; else &#123; let num = Math.floor((days - firstWeekDays) / 7); let lastNum = Math.floor((days - firstWeekDays) % 7); numArr.push(firstWeekDays); for (let i = 0; i &lt; num; i++) &#123; numArr.push(7); &#125; numArr.push(lastNum); &#125; return numArr; &#125;&#125;; 以上就是我的所有的代码，当然还有许多需要优化的地方，希望看过的大神不吝赐教。谢谢！！！]]></content>
      <tags>
        <tag>HTML Css JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS 简介]]></title>
    <url>%2F2018%2F11%2F23%2Fcss%2F</url>
    <content type="text"><![CDATA[CSS (Cascading Style Sheets) 是用来样式化和排版你的网页的。 层叠样式表 — 也就是CSS — 是你在HTML之后应该学习的第二门技术。HTML用于定义内容的结构和语义，CSS用于设计风格和布局。比如，您可以使用CSS来更改内容的字体、颜色、大小、间距，将内容分为多列，或者添加动画及其他的装饰效果。 什么是 CSS?正如我们之前提到的，CSS是一种用于向用户指定文档如何呈现的语言 — 它们如何被指定样式、布局等。 文档通常是用标记语言结构化的文本文件 — HTML 是最常用的标记语言, 但你依然可以遇见一些其他的标记语言，比如 SVG 或者 XML。 呈现文档给用户意味着将其转换为用户可用的形式。浏览器，比如 Firefox, Chrome 或者 Internet Explorer，被设计用于可视化呈现文档，例如，在计算机屏幕，投影仪或打印机上。 CSS如何影响HTML？Web浏览器将CSS规则应用于文档以影响它们的显示方式。一个CSS规则由以下组成： 一组 属性 ，属性的值更新了 HTML 的内容的显示方式。比如，我想让元素的宽度是其父元素的50％，或者元素背景变为红色。一个 选择器，它选择元素，这（些）元素是你想应用这些最新的属性值于其上的元素。比如，我想将我的CSS规则应用到我HTML文档中的所有段落上。]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML 标签列表]]></title>
    <url>%2F2018%2F10%2F19%2F%E6%A0%87%E7%AD%BE%E5%88%97%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[HTML 标签列表 内容出自MDN官网 根元素1&lt;html&gt; 代表 HTML 或 XHTML 文档的根。其他所有元素必须是这个元素的子节点。 脚本1234Element Description&lt;script&gt; 定义一个内联脚本或链接到外部脚本。脚本语言是 JavaScript。&lt;noscript&gt; 定义当浏览器不支持脚本时显示的替代文字。&lt;template&gt; 这个元素在 HTML5 中加入 通过 JavaScript 在运行时实例化内容的容器。 章节123456789101112Element Description&lt;body&gt; 代表 HTML 文档的内容。在文档中只能有一个 &lt;body&gt; 元素。&lt;section&gt; 这个元素在 HTML5 中加入定义文档中的一个章节。&lt;nav&gt; 这个元素在 HTML5 中加入定义只包含导航链接的章节。&lt;article&gt; 这个元素在 HTML5 中加入定义可以独立于内容其余部分的完整独立内容块。&lt;aside&gt; 这个元素在 HTML5 中加入定义和页面内容关联度较低的内容——如果被删除，剩下的内容仍然很合理。&lt;h1&gt;,&lt;h2&gt;,&lt;h3&gt;,&lt;h4&gt;,&lt;h5&gt;,&lt;h6&gt; 标题元素实现了六层文档标题，&lt;h1&gt; 是最大的标题，&lt;h6&gt; 是最小的标题。标题元素简要地描述章节的主题。&lt;header&gt; 这个元素在 HTML5 中加入定义页面或章节的头部。它经常包含 logo、页面标题和导航性的目录。&lt;footer&gt; 这个元素在 HTML5 中加入 定义页面或章节的尾部。它经常包含版权信息、法律信息链接和反馈建议用的地址。&lt;address&gt; 定义包含联系信息的一个章节。&lt;main&gt; 这个元素在 HTML5 中加入定义文档中主要或重要的内容。 组织内容12345678910111213&lt;p&gt; 定义一个段落。&lt;hr&gt; 代表章节、文章或其他长内容中段落之间的分隔符。&lt;pre&gt; 代表其内容已经预先排版过，格式应当保留 。&lt;blockquote&gt; 代表引用自其他来源的内容。&lt;ol&gt; 定义一个有序列表。&lt;ul&gt; 定义一个无序列表。&lt;li&gt; 定义列表中的一个列表项。&lt;dl&gt; 定义一个定义列表（一系列术语和其定义）。&lt;dt&gt; 代表一个由下一个 &lt;dd&gt; 定义的术语。&lt;dd&gt; 代表出现在它之前术语的定义。&lt;figure&gt; 这个元素在 HTML5 中加入代表一个和文档有关的图例。&lt;figcaption&gt; 这个元素在 HTML5 中加入代表一个图例的说明。&lt;div&gt; 代表一个通用的容器，没有特殊含义。 文字形式1234567891011121314151617181920212223242526272829&lt;a&gt; 代表一个链接到其他资源的超链接 。&lt;em&gt; 代表强调文字。&lt;strong&gt; 代表特别重要文字。&lt;small&gt; 代表注释 ，如免责声明、版权声明等，对理解文档不重要。&lt;s&gt; 代表不准确或不相关的内容。&lt;cite&gt; 代表作品标题 。&lt;q&gt; 代表内联的引用 。&lt;dfn&gt; 代表一个术语包含在其最近祖先内容中的定义 。&lt;abbr&gt; 代表省略或缩写 ，其完整内容在 title 属性中。&lt;data&gt; 这个元素在 HTML5 中加入关联一个内容的机器可读的等价形式 （该元素只在 WHATWG版本的 HTML 标准中，不在 W3C 版本的 HTML5 标准中）。&lt;time&gt; 这个元素在 HTML5 中加入代表日期 和时间 值；机器可读的等价形式通过 datetime 属性指定。&lt;code&gt; 代表计算机代码 。&lt;var&gt; 代表代码中的变量 。&lt;samp&gt; 代表程序或电脑的输出 。&lt;kbd&gt; 代表用户输入 ，一般从键盘输出，但也可以代表其他输入，如语音输入。&lt;sub&gt;,&lt;sup&gt; 分别代表下标 和上标 。&lt;i&gt; 代表一段不同性质 的文字，如技术术语、外文短语等。&lt;b&gt; 代表一段需要被关注 的文字。&lt;u&gt; 代表一段需要下划线呈现的文本注释，如标记出拼写错误的文字等。&lt;mark&gt; 这个元素在 HTML5 中加入 代表一段需要被高亮的引用 文字。&lt;ruby&gt; 这个元素在 HTML5 中加入 代表被ruby 注释 标记的文本，如中文汉字和它的拼音。&lt;rt&gt; 这个元素在 HTML5 中加入 代表ruby 注释 ，如中文拼音。&lt;rp&gt; 这个元素在 HTML5 中加入 代表 ruby 注释两边的额外插入文本 ，用于在不支持 ruby 注释显示的浏览器中提供友好的注释显示。&lt;bdi&gt; 这个元素在 HTML5 中加入 代表需要脱离 父元素文本方向的一段文本。它允许嵌入一段不同或未知文本方向格式的文本。&lt;bdo&gt; 指定子元素的文本方向 ，显式地覆盖默认的文本方向。&lt;span&gt; 代表一段没有特殊含义的文本，当其他语义元素都不适合文本时候可以使用该元素。&lt;br&gt; 代表换行 。&lt;wbr&gt; 这个元素在 HTML5 中加入代表建议换行 (Word Break Opportunity) ，当文本太长需要换行时将会在此处添加换行符。 编辑12&lt;ins&gt; 定义增加 到文档的内容。&lt;del&gt; 定义从文档移除 的内容。 嵌入内容1234567891011121314&lt;img&gt; 代表一张图片 。&lt;iframe&gt; 代表一个内联的框架 。&lt;embed&gt; 这个元素在 HTML5 中加入 代表一个嵌入 的外部资源，如应用程序或交互内容。&lt;object&gt; 代表一个外部资源 ，如图片、HTML 子文档、插件等。&lt;param&gt; 代表 &lt;object&gt; 元素所指定的插件的参数 。&lt;video&gt; 这个元素在 HTML5 中加入 代表一段视频 及其视频文件和字幕，并提供了播放视频的用户界面。&lt;audio&gt; 这个元素在 HTML5 中加入 代表一段声音 ，或音频流 。&lt;source&gt; 这个元素在 HTML5 中加入 为 &lt;video&gt; 或 &lt;audio&gt; 这类媒体元素指定媒体源 。&lt;track&gt; 这个元素在 HTML5 中加入 为 &lt;video&gt; 或 &lt;audio&gt; 这类媒体元素指定文本轨道（字幕） 。&lt;canvas&gt; 这个元素在 HTML5 中加入 代表位图区域 ，可以通过脚本在它上面实时呈现图形，如图表、游戏绘图等。&lt;map&gt; 与 &lt;area&gt; 元素共同定义图像映射 区域。&lt;area&gt; 与 &lt;map&gt; 元素共同定义图像映射 区域。&lt;svg&gt; 这个元素在 HTML5 中加入 定义一个嵌入式矢量图 。&lt;math&gt; 这个元素在 HTML5 中加入 定义一段数学公式 。 表格12345678910&lt;table&gt; 定义多维数据 。&lt;caption&gt; 代表表格的标题 。&lt;colgroup&gt; 代表表格中一组单列或多列 。&lt;col&gt; 代表表格中的列 。&lt;tbody&gt; 代表表格中一块具体数据 （表格主体）。&lt;thead&gt; 代表表格中一块列标签 （表头）。&lt;tfoot&gt; 代表表格中一块列摘要 （表尾）。&lt;tr&gt; 代表表格中的行 。&lt;td&gt; 代表表格中的单元格 。&lt;th&gt; 代表表格中的头部单元格 。 表单123456789101112131415&lt;form&gt; 代表一个表单 ，由控件组成。&lt;fieldset&gt; 代表控件组 。&lt;legend&gt; 代表 &lt;fieldset&gt; 控件组的标题 。&lt;label&gt; 代表表单控件的标题 。&lt;input&gt; 代表允许用户编辑数据的数据区 （文本框、单选框、复选框等）。&lt;button&gt; 代表按钮 。&lt;select&gt; 代表下拉框 。&lt;datalist&gt; 这个元素在 HTML5 中加入 代表提供给其他控件的一组预定义选项 。&lt;optgroup&gt; 代表一个选项分组 。&lt;option&gt; 代表一个 &lt;select&gt; 元素或 &lt;datalist&gt; 元素中的一个选项&lt;textarea&gt; 代表多行文本框 。&lt;keygen&gt; 这个元素在 HTML5 中加入 代表一个密钥对生成器 控件。&lt;output&gt; 这个元素在 HTML5 中加入 代表计算值 。&lt;progress&gt; 这个元素在 HTML5 中加入 代表进度条 。&lt;meter&gt; 这个元素在 HTML5 中加入 代表滑动条 。 交互元素1234&lt;details&gt; 这个元素在 HTML5 中加入代表一个用户可以(点击)获取额外信息或控件的小部件 。&lt;summary&gt; 这个元素在 HTML5 中加入代表&lt;details&gt;元素的综述或标题 。&lt;menuitem&gt; 这个元素在 HTML5 中加入代表一个用户可以点击的菜单项。&lt;menu&gt; 这个元素在 HTML5中加入代表菜单。]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML 介绍]]></title>
    <url>%2F2018%2F10%2F19%2FHtml%20%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[HTML 介绍 HTML（HyperText Markup Language，超文本标记语言） 是用来定义网页结构的一种描述语言。 发展简史 1990 年，由于对 Web 未来发展的远见，Tim Berners-Lee 提出了 超文本 的概念，并在第二年在 SGML 的基础上将其正式定义为一个标记语言。IETF 于 1993 年正式开始制定 HTML 规范，并在经历了几个版本的草案后于 1995 年发布了 HTML 2.0 版本。1994年，Berners-Lee 为了 Web 发展而成立了 W3C。1996 年，W3C 接管了 HTML 的标准化工作，并在1年后发布了 HTML 3.2 推荐标准。1999 年，HTML 4.0 发布，并在 2000 年成为 ISO 标准。 自那以后，W3C 几乎放弃了 HTML 而转向 XHTML，并于 2004 年成立了另一个独立的小组 WHATWG。幸运的是，WHATWG 后来又转回来参与了 HTML5 标准的制定，两个组织（译注：即 W3C 和 WHATWG）在 2008 年发布了第一份草案，并在 2014 年发布了 HTML5 标准的最终版。 概念和语法 HTML 文档是包含多个 HTML 元素 的文本文档。每个元素都用一对开始和结束 标签 包裹。每个标签以尖括号（&lt;&gt;）开始和结束。也有一部分标签中不需要包含文本，这些标签称为空标签，如 。 HTML：超文本标记语言标签按照语法分布：1.单标签：开始标签&lt;标签名&gt;，例,2.双标签：开始标签和结束标签构成&lt;标签名&gt; &lt;/标签名&gt; 例：3.注释标签：（Ctrl+/）开始 结束 DOCTYPE 文档类型 根元素 设置网页基本信息 字符编码标签按照在页面中的呈现效果分类 1 块元素 特性：可以设置宽高，独占一行例如：div/p/pre/h1-h6/列表标签{（无序列 ul li ） (有序列表 ol li ）(项目列表dl/dt dd (dl容器 dt项目标题 dd项目列表)}2 行内元素 特性:在一行内显示，不可以设置宽高 例如3 行内块元素 特性：在一行内显示，可以设置宽高]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
</search>
